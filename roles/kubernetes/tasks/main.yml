- name: Install kubectl  with option --classic
  snap:
    name: kubectl
    classic: true

- name: Get architecture
  shell:
    cmd: dpkg --print-architecture
  register: architecture

- name: Download minikube
  get_url:
    url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-{{architecture.stdout}}
    dest: "{{scripts_directory}}/minikube-linux-{{architecture.stdout}}"

- name: Get architecture
  become: true
  shell:
    cmd: install {{scripts_directory}}/minikube-linux-{{architecture.stdout}} /usr/local/bin/minikube

- name: Install kubectx with option --classic
  snap:
    name: kubectx
    classic: true

- name: Install fzf (to enable interactive mode for kubectx)
  apt:
    name:
      - fzf
    state: present

- name: Download k9s
  get_url:
    url: https://github.com/derailed/k9s/archive/refs/tags/v0.27.4.zip
    dest: "{{scripts_directory}}/k9s.zip"

- name: Ensure k9s directory exists
  file:
    path: "{{scripts_directory}}/k9s"
    state: directory

- name: Unarchive k9s
  unarchive:
    src: "{{scripts_directory}}/k9s.zip"
    dest: "{{scripts_directory}}/k9s"

- name: Install golang
  apt:
    name:
      - golang
    state: present

- name: Upgrade all packages, autoclean and autoremove
  become: true
  apt:
    autoclean: yes
    autoremove: yes
    upgrade: full

- name: Install k9s
  shell:
    cmd: make -C {{scripts_directory}}/k9s/k9s-0.27.4 build && ./execs/k9s
